//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Script/JaneScripts/InteractWithObjects.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InteractWithObjects : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InteractWithObjects()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InteractWithObjects"",
    ""maps"": [
        {
            ""name"": ""InteractWithObject"",
            ""id"": ""9dfb97ca-6c59-45f5-a236-694f7720de15"",
            ""actions"": [
                {
                    ""name"": ""CollectFuse"",
                    ""type"": ""Button"",
                    ""id"": ""e4febf2b-3091-4c4a-92a4-feb0f1877821"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PutFuseIn"",
                    ""type"": ""Button"",
                    ""id"": ""bb28626b-332a-4e2d-8776-20c6d07e2973"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CollectKeycard"",
                    ""type"": ""Button"",
                    ""id"": ""65aaa4a1-9b8c-496e-a083-805036a0004e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PutKeycardIn"",
                    ""type"": ""Button"",
                    ""id"": ""97e86d32-8bc5-4983-832f-a880bbdea365"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9af1fd3a-66af-4203-918e-af74a8e314ba"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CollectFuse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cecd54b6-11e3-4d7b-985b-81864059d968"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PutFuseIn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e07da81e-2e3d-443f-8023-44c206540c9d"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CollectKeycard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""386220a6-588f-47da-92eb-c357835b8b37"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PutKeycardIn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // InteractWithObject
        m_InteractWithObject = asset.FindActionMap("InteractWithObject", throwIfNotFound: true);
        m_InteractWithObject_CollectFuse = m_InteractWithObject.FindAction("CollectFuse", throwIfNotFound: true);
        m_InteractWithObject_PutFuseIn = m_InteractWithObject.FindAction("PutFuseIn", throwIfNotFound: true);
        m_InteractWithObject_CollectKeycard = m_InteractWithObject.FindAction("CollectKeycard", throwIfNotFound: true);
        m_InteractWithObject_PutKeycardIn = m_InteractWithObject.FindAction("PutKeycardIn", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // InteractWithObject
    private readonly InputActionMap m_InteractWithObject;
    private IInteractWithObjectActions m_InteractWithObjectActionsCallbackInterface;
    private readonly InputAction m_InteractWithObject_CollectFuse;
    private readonly InputAction m_InteractWithObject_PutFuseIn;
    private readonly InputAction m_InteractWithObject_CollectKeycard;
    private readonly InputAction m_InteractWithObject_PutKeycardIn;
    public struct InteractWithObjectActions
    {
        private @InteractWithObjects m_Wrapper;
        public InteractWithObjectActions(@InteractWithObjects wrapper) { m_Wrapper = wrapper; }
        public InputAction @CollectFuse => m_Wrapper.m_InteractWithObject_CollectFuse;
        public InputAction @PutFuseIn => m_Wrapper.m_InteractWithObject_PutFuseIn;
        public InputAction @CollectKeycard => m_Wrapper.m_InteractWithObject_CollectKeycard;
        public InputAction @PutKeycardIn => m_Wrapper.m_InteractWithObject_PutKeycardIn;
        public InputActionMap Get() { return m_Wrapper.m_InteractWithObject; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InteractWithObjectActions set) { return set.Get(); }
        public void SetCallbacks(IInteractWithObjectActions instance)
        {
            if (m_Wrapper.m_InteractWithObjectActionsCallbackInterface != null)
            {
                @CollectFuse.started -= m_Wrapper.m_InteractWithObjectActionsCallbackInterface.OnCollectFuse;
                @CollectFuse.performed -= m_Wrapper.m_InteractWithObjectActionsCallbackInterface.OnCollectFuse;
                @CollectFuse.canceled -= m_Wrapper.m_InteractWithObjectActionsCallbackInterface.OnCollectFuse;
                @PutFuseIn.started -= m_Wrapper.m_InteractWithObjectActionsCallbackInterface.OnPutFuseIn;
                @PutFuseIn.performed -= m_Wrapper.m_InteractWithObjectActionsCallbackInterface.OnPutFuseIn;
                @PutFuseIn.canceled -= m_Wrapper.m_InteractWithObjectActionsCallbackInterface.OnPutFuseIn;
                @CollectKeycard.started -= m_Wrapper.m_InteractWithObjectActionsCallbackInterface.OnCollectKeycard;
                @CollectKeycard.performed -= m_Wrapper.m_InteractWithObjectActionsCallbackInterface.OnCollectKeycard;
                @CollectKeycard.canceled -= m_Wrapper.m_InteractWithObjectActionsCallbackInterface.OnCollectKeycard;
                @PutKeycardIn.started -= m_Wrapper.m_InteractWithObjectActionsCallbackInterface.OnPutKeycardIn;
                @PutKeycardIn.performed -= m_Wrapper.m_InteractWithObjectActionsCallbackInterface.OnPutKeycardIn;
                @PutKeycardIn.canceled -= m_Wrapper.m_InteractWithObjectActionsCallbackInterface.OnPutKeycardIn;
            }
            m_Wrapper.m_InteractWithObjectActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CollectFuse.started += instance.OnCollectFuse;
                @CollectFuse.performed += instance.OnCollectFuse;
                @CollectFuse.canceled += instance.OnCollectFuse;
                @PutFuseIn.started += instance.OnPutFuseIn;
                @PutFuseIn.performed += instance.OnPutFuseIn;
                @PutFuseIn.canceled += instance.OnPutFuseIn;
                @CollectKeycard.started += instance.OnCollectKeycard;
                @CollectKeycard.performed += instance.OnCollectKeycard;
                @CollectKeycard.canceled += instance.OnCollectKeycard;
                @PutKeycardIn.started += instance.OnPutKeycardIn;
                @PutKeycardIn.performed += instance.OnPutKeycardIn;
                @PutKeycardIn.canceled += instance.OnPutKeycardIn;
            }
        }
    }
    public InteractWithObjectActions @InteractWithObject => new InteractWithObjectActions(this);
    public interface IInteractWithObjectActions
    {
        void OnCollectFuse(InputAction.CallbackContext context);
        void OnPutFuseIn(InputAction.CallbackContext context);
        void OnCollectKeycard(InputAction.CallbackContext context);
        void OnPutKeycardIn(InputAction.CallbackContext context);
    }
}
